//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Matmaxx.Butchr.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Matmaxx.Butchr.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap application_split {
            get {
                object obj = ResourceManager.GetObject("application_split", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The butchr.
        /// </summary>
        internal static string ApplicationName {
            get {
                return ResourceManager.GetString("ApplicationName", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap arrow_in {
            get {
                object obj = ResourceManager.GetObject("arrow_in", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_out {
            get {
                object obj = ResourceManager.GetObject("arrow_out", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_refresh {
            get {
                object obj = ResourceManager.GetObject("arrow_refresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap butchr_logo__400x200 {
            get {
                object obj = ResourceManager.GetObject("butchr_logo__400x200", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap camera {
            get {
                object obj = ResourceManager.GetObject("camera", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap chart_organisation {
            get {
                object obj = ResourceManager.GetObject("chart_organisation", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap door_in {
            get {
                object obj = ResourceManager.GetObject("door_in", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directory does not exist: {0}.
        /// </summary>
        internal static string ExDirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("ExDirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera model.
        /// </summary>
        internal static string ExifKeyCameraModel {
            get {
                return ResourceManager.GetString("ExifKeyCameraModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera OEM.
        /// </summary>
        internal static string ExifKeyCameraOEM {
            get {
                return ResourceManager.GetString("ExifKeyCameraOEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Focal length.
        /// </summary>
        internal static string ExifKeyFocalLength {
            get {
                return ResourceManager.GetString("ExifKeyFocalLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aperture.
        /// </summary>
        internal static string ExifKeyFStop {
            get {
                return ResourceManager.GetString("ExifKeyFStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ISO.
        /// </summary>
        internal static string ExifKeyIsoSpeedRating {
            get {
                return ResourceManager.GetString("ExifKeyIsoSpeedRating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Orientation.
        /// </summary>
        internal static string ExifKeyOrientation {
            get {
                return ResourceManager.GetString("ExifKeyOrientation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original timestamp.
        /// </summary>
        internal static string ExifKeyOriginalTimestamp {
            get {
                return ResourceManager.GetString("ExifKeyOriginalTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutter speed.
        /// </summary>
        internal static string ExifKeyShutterspeed {
            get {
                return ResourceManager.GetString("ExifKeyShutterspeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to n/a.
        /// </summary>
        internal static string ExifValueNotAvailable {
            get {
                return ResourceManager.GetString("ExifValueNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Landscape.
        /// </summary>
        internal static string ExifValueOrientationLandscape {
            get {
                return ResourceManager.GetString("ExifValueOrientationLandscape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portrait.
        /// </summary>
        internal static string ExifValueOrientationPortrait {
            get {
                return ResourceManager.GetString("ExifValueOrientationPortrait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sourcefile: {0}.
        /// </summary>
        internal static string ExistingFileDialogSource {
            get {
                return ResourceManager.GetString("ExistingFileDialogSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Targetfile: {0}.
        /// </summary>
        internal static string ExistingFileDialogTarget {
            get {
                return ResourceManager.GetString("ExistingFileDialogTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {0} cannot be distributed to {1}: {2}.
        /// </summary>
        internal static string ExMoveFailed {
            get {
                return ResourceManager.GetString("ExMoveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNG.
        /// </summary>
        internal static string ExtensionRawAdobe {
            get {
                return ResourceManager.GetString("ExtensionRawAdobe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CR2.
        /// </summary>
        internal static string ExtensionRawCanon01 {
            get {
                return ResourceManager.GetString("ExtensionRawCanon01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CRW.
        /// </summary>
        internal static string ExtensionRawCanon02 {
            get {
                return ResourceManager.GetString("ExtensionRawCanon02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RAW.
        /// </summary>
        internal static string ExtensionRawGeneric {
            get {
                return ResourceManager.GetString("ExtensionRawGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NEF.
        /// </summary>
        internal static string ExtensionRawNikon {
            get {
                return ResourceManager.GetString("ExtensionRawNikon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The creation of the thumbnails failed:{0}.
        /// </summary>
        internal static string ExThumbnailCreationFailed {
            get {
                return ResourceManager.GetString("ExThumbnailCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested image is not thumbnailed yet:{0}.
        /// </summary>
        internal static string ExThumbnailNotCached {
            get {
                return ResourceManager.GetString("ExThumbnailNotCached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to done.
        /// </summary>
        internal static string FolderFinished {
            get {
                return ResourceManager.GetString("FolderFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to gallery.
        /// </summary>
        internal static string FolderGallery {
            get {
                return ResourceManager.GetString("FolderGallery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to D3.
        /// </summary>
        internal static string FolderGroupFormat {
            get {
                return ResourceManager.GetString("FolderGroupFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to internet.
        /// </summary>
        internal static string FolderInternet {
            get {
                return ResourceManager.GetString("FolderInternet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JpgInitial.
        /// </summary>
        internal static string FolderJpgInitial {
            get {
                return ResourceManager.GetString("FolderJpgInitial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to jpg.
        /// </summary>
        internal static string FolderJpgTarget {
            get {
                return ResourceManager.GetString("FolderJpgTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RawInitial.
        /// </summary>
        internal static string FolderRawInitial {
            get {
                return ResourceManager.GetString("FolderRawInitial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to raw.
        /// </summary>
        internal static string FolderRawTarget {
            get {
                return ResourceManager.GetString("FolderRawTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to scratch.
        /// </summary>
        internal static string FolderScratch {
            get {
                return ResourceManager.GetString("FolderScratch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to done.
        /// </summary>
        internal static string FolderScratchDone {
            get {
                return ResourceManager.GetString("FolderScratchDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to skipped.
        /// </summary>
        internal static string FolderScratchSkipped {
            get {
                return ResourceManager.GetString("FolderScratchSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tiff.
        /// </summary>
        internal static string FolderTiff {
            get {
                return ResourceManager.GetString("FolderTiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to work.
        /// </summary>
        internal static string FolderWorkTarget {
            get {
                return ResourceManager.GetString("FolderWorkTarget", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap help {
            get {
                object obj = ResourceManager.GetObject("help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The autogroup feature will read the exif data of all imported files and will try to automatically find 
        ///and group those images that form the single HDR brackets. To accomplish this, it uses the &apos;original timestamp&apos;
        ///field from the JPGs exif data.
        ///Before the algorithm jumps though the imported images, you have to specify a maximum interval in the original timestamp 
        ///that may pass between two single images to be considered to belong to the same series of brackets.
        ///It usually works fine with a value of abo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpContentAutoGroup {
            get {
                return ResourceManager.GetString("HelpContentAutoGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On distribution, the imported files will be transferred from the temporary target folder to their final destinations.
        ///If any files were not grouped, they will remain in the temporary target folders (JpgInitial and RawInitial).
        ///The directory structure after distribution will look as follows:
        ///
        ///+-TargetFolder
        ///|
        ///+--001
        ///|
        ///+---jpg (containing the jpgs of the set)
        ///|
        ///+---raw (containing the raw files of the set)
        ///|
        ///+---work (initially empty, I use it to store any backups during further processing and the [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpContentDistribute {
            get {
                return ResourceManager.GetString("HelpContentDistribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All of your images are now imported from the source location. 
        ///You now have to group them.
        ///Grouping means that you select all source images that belong to one series of brackets and either:
        ///- press the &apos;Group selected images&apos; button on the toolbar (the one with the connected chains)
        ///- select &apos;Group selected images&apos; from the main menu.
        ///- press &apos;S&apos; 
        ///A small yellow square with the group number will be added to each selected image.
        ///
        ///If you grouped the wrong images, you can ungroup them by selecting them [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpContentGroupFiles {
            get {
                return ResourceManager.GetString("HelpContentGroupFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok, so let&apos;s get started by importing images from your last photowalk.
        ///First of all, select the working paths for the butchr.
        ///The source path is the directory where your source images are currently stored. This may also be a removable card reader drive 
        ///or your camera connected via USB showing up in the explorer as an external drive. The only important thing is that all files 
        ///(JPG and RAW) are in the same directory.
        ///The target path is the root directory where your images will be stored for further pro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpContentImport {
            get {
                return ResourceManager.GetString("HelpContentImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the butchr...
        ///
        ///The butchr is an organisation tool for HDR photographers. It follows a straight forward workflow that 
        ///is also decribed on my blog at http://www.matmaxx.org/hdrtutorial
        ///
        ///The workflow constists of the following steps:
        ///- import images from your camera or memory card
        ///- group images (either automatically by timestamp or manually by selection)
        ///- distribute images to a wellformed directory structure
        ///- generate a batch file that automatically creates a preview of the tonemapped i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpContentOpenApplication {
            get {
                return ResourceManager.GetString("HelpContentOpenApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scratchbatch is a term invented by myself simply because I did not find anything better for this feature.
        ///But what&apos;s behind this:
        ///This feature will produce a batchfile that you can execute externally to call the command line version of photomatix
        ///to process and tonemap all images-series in the current import. I chose to do this externally because depending on 
        ///your machine, this might take quite a long time.
        ///When clicking on the scratchbatch button, a dialog appears that shows all sliders that you are  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpContentScratchBatch {
            get {
                return ResourceManager.GetString("HelpContentScratchBatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected source folder does not contain images..
        /// </summary>
        internal static string ImportOptionsFolderContainsNoImages {
            get {
                return ResourceManager.GetString("ImportOptionsFolderContainsNoImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected folder does not exist..
        /// </summary>
        internal static string ImportOptionsFolderDoesNotExist {
            get {
                return ResourceManager.GetString("ImportOptionsFolderDoesNotExist", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap information {
            get {
                object obj = ResourceManager.GetObject("information", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap link {
            get {
                object obj = ResourceManager.GetObject("link", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap link_break {
            get {
                object obj = ResourceManager.GetObject("link_break", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap link_delete {
            get {
                object obj = ResourceManager.GetObject("link_delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content.
        /// </summary>
        internal static string LogColContent {
            get {
                return ResourceManager.GetString("LogColContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        internal static string LogColExifKey {
            get {
                return ResourceManager.GetString("LogColExifKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        internal static string LogColExifValue {
            get {
                return ResourceManager.GetString("LogColExifValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp.
        /// </summary>
        internal static string LogColTimestamp {
            get {
                return ResourceManager.GetString("LogColTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files distributed successfully..
        /// </summary>
        internal static string LogDistributionFinished {
            get {
                return ResourceManager.GetString("LogDistributionFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The autogroup feature produced this error: {0}.
        /// </summary>
        internal static string LogExAutogroupFailed {
            get {
                return ResourceManager.GetString("LogExAutogroupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exif reader problem: {0}.
        /// </summary>
        internal static string LogExExifReader {
            get {
                return ResourceManager.GetString("LogExExifReader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested help file for {0} was not found at {1}.
        /// </summary>
        internal static string LogExHelpFileNotFound {
            get {
                return ResourceManager.GetString("LogExHelpFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while drawing a thumbnail: {0}.
        /// </summary>
        internal static string LogExListDrawItem {
            get {
                return ResourceManager.GetString("LogExListDrawItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {0} was distributed to {1}..
        /// </summary>
        internal static string LogMoveSuccessful {
            get {
                return ResourceManager.GetString("LogMoveSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please load some images before performing this operation..
        /// </summary>
        internal static string LogPleaseLoadImages {
            get {
                return ResourceManager.GetString("LogPleaseLoadImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saved ScratchBatch at: {0}.
        /// </summary>
        internal static string LogScratchBatchCreated {
            get {
                return ResourceManager.GetString("LogScratchBatchCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel complete import operation..
        /// </summary>
        internal static string LogStepCancel {
            get {
                return ResourceManager.GetString("LogStepCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy {0} to {1}..
        /// </summary>
        internal static string LogStepCopy {
            get {
                return ResourceManager.GetString("LogStepCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy finished first, waiting for end of thumbnail creation..
        /// </summary>
        internal static string LogStepCopyFinishedFirst {
            get {
                return ResourceManager.GetString("LogStepCopyFinishedFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy finished last, now filling list..
        /// </summary>
        internal static string LogStepCopyFinishedLast {
            get {
                return ResourceManager.GetString("LogStepCopyFinishedLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}|{1}] {2}.
        /// </summary>
        internal static string LogStepCounterCurrentTotal {
            get {
                return ResourceManager.GetString("LogStepCounterCurrentTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occured while processing {0}..
        /// </summary>
        internal static string LogStepError {
            get {
                return ResourceManager.GetString("LogStepError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move {0} to {1}..
        /// </summary>
        internal static string LogStepMove {
            get {
                return ResourceManager.GetString("LogStepMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite {0} with {1}..
        /// </summary>
        internal static string LogStepOverwrite {
            get {
                return ResourceManager.GetString("LogStepOverwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip {0}..
        /// </summary>
        internal static string LogStepSkip {
            get {
                return ResourceManager.GetString("LogStepSkip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start thumbnail creation.
        /// </summary>
        internal static string LogStepStartThumbnailCreation {
            get {
                return ResourceManager.GetString("LogStepStartThumbnailCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}|{1}] Thumbnail created for {2}..
        /// </summary>
        internal static string LogStepThumbnailCreated {
            get {
                return ResourceManager.GetString("LogStepThumbnailCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thumbnail creation finished first, waiting for end of raw copy..
        /// </summary>
        internal static string LogStepThumbnailingFinishedFirst {
            get {
                return ResourceManager.GetString("LogStepThumbnailingFinishedFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thumbnail creation finished last, now filling listview..
        /// </summary>
        internal static string LogStepThumbnailingFinishedLast {
            get {
                return ResourceManager.GetString("LogStepThumbnailingFinishedLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to export xmp file: {0}.
        /// </summary>
        internal static string LogXmpExportFailed {
            get {
                return ResourceManager.GetString("LogXmpExportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to import xmp file. Loading defaults..
        /// </summary>
        internal static string LogXmpImportFailed {
            get {
                return ResourceManager.GetString("LogXmpImportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your selected target folder already contains butchred images. {0}The images you import now will be appended to the existing butchr images. .
        /// </summary>
        internal static string MboxFolderAlreadyContainsButchrsText {
            get {
                return ResourceManager.GetString("MboxFolderAlreadyContainsButchrsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder already in use.
        /// </summary>
        internal static string MboxFolderAlreadyContainsButchrsTitle {
            get {
                return ResourceManager.GetString("MboxFolderAlreadyContainsButchrsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory does not exist, do you want to create it?.
        /// </summary>
        internal static string MboxImportCreateDirectoryText {
            get {
                return ResourceManager.GetString("MboxImportCreateDirectoryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory not found.
        /// </summary>
        internal static string MboxImportCreateDirectoryTitle {
            get {
                return ResourceManager.GetString("MboxImportCreateDirectoryTitle", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap mod_input {
            get {
                object obj = ResourceManager.GetObject("mod_input", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap mod_output {
            get {
                object obj = ResourceManager.GetObject("mod_output", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applications (*.exe)|*.exe|All files (*.*)|*.*.
        /// </summary>
        internal static string ofdPhotomatixFilter {
            get {
                return ResourceManager.GetString("ofdPhotomatixFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select photomatix commandline executable.
        /// </summary>
        internal static string ofdPhotomatixTitle {
            get {
                return ResourceManager.GetString("ofdPhotomatixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to xmp files (*.xmp)|*.xmp|All files (*.*)|*.*.
        /// </summary>
        internal static string ofdXmpImportFilter {
            get {
                return ResourceManager.GetString("ofdXmpImportFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select xmp file to import.
        /// </summary>
        internal static string ofdXmpImportTitle {
            get {
                return ResourceManager.GetString("ofdXmpImportTitle", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap page_white_camera {
            get {
                object obj = ResourceManager.GetObject("page_white_camera", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pencil {
            get {
                object obj = ResourceManager.GetObject("pencil", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap photo {
            get {
                object obj = ResourceManager.GetObject("photo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap picture {
            get {
                object obj = ResourceManager.GetObject("picture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pictures {
            get {
                object obj = ResourceManager.GetObject("pictures", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview_.
        /// </summary>
        internal static string PreviewPrefix {
            get {
                return ResourceManager.GetString("PreviewPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .jpg.
        /// </summary>
        internal static string PreviewSuffix {
            get {
                return ResourceManager.GetString("PreviewSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approval date.
        /// </summary>
        internal static string ProviderColApprovalDate {
            get {
                return ResourceManager.GetString("ProviderColApprovalDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publish state.
        /// </summary>
        internal static string ProviderColPublishState {
            get {
                return ResourceManager.GetString("ProviderColPublishState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider name.
        /// </summary>
        internal static string ProviderColTitle {
            get {
                return ResourceManager.GetString("ProviderColTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload date.
        /// </summary>
        internal static string ProviderColUploadDate {
            get {
                return ResourceManager.GetString("ProviderColUploadDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working state.
        /// </summary>
        internal static string ProviderColWorkingState {
            get {
                return ResourceManager.GetString("ProviderColWorkingState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScratchBatch.bat.
        /// </summary>
        internal static string ScratchBatchFilename {
            get {
                return ResourceManager.GetString("ScratchBatchFilename", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap session {
            get {
                object obj = ResourceManager.GetObject("session", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to xmp files (*.xmp)|*.xmp|All files (*.*)|*.*.
        /// </summary>
        internal static string sfdXmpExportFilter {
            get {
                return ResourceManager.GetString("sfdXmpExportFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select xmp file to export.
        /// </summary>
        internal static string sfdXmpExportTitle {
            get {
                return ResourceManager.GetString("sfdXmpExportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What is the autogroup feature..?.
        /// </summary>
        internal static string ShowHelpAutoGroupTitle {
            get {
                return ResourceManager.GetString("ShowHelpAutoGroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How do I distribute my files..?.
        /// </summary>
        internal static string ShowHelpDistributeTitle {
            get {
                return ResourceManager.GetString("ShowHelpDistributeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files are imorted, so how do I go on..?.
        /// </summary>
        internal static string ShowHelpGroupFiles {
            get {
                return ResourceManager.GetString("ShowHelpGroupFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How do I import my HDR source images..?.
        /// </summary>
        internal static string ShowHelpImportTitle {
            get {
                return ResourceManager.GetString("ShowHelpImportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How can the butchr help me organize my HDR source images..?.
        /// </summary>
        internal static string ShowHelpOpenApplicationTitle {
            get {
                return ResourceManager.GetString("ShowHelpOpenApplicationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What the heck it scratchbatch..?.
        /// </summary>
        internal static string ShowHelpScratchBatchTitle {
            get {
                return ResourceManager.GetString("ShowHelpScratchBatchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created.
        /// </summary>
        internal static string StringColCreated {
            get {
                return ResourceManager.GetString("StringColCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modified.
        /// </summary>
        internal static string StringColModified {
            get {
                return ResourceManager.GetString("StringColModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string StringColName {
            get {
                return ResourceManager.GetString("StringColName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size.
        /// </summary>
        internal static string StringColSize {
            get {
                return ResourceManager.GetString("StringColSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive or directory access denided: {0}.
        /// </summary>
        internal static string StringMboxDriveAuthFailed {
            get {
                return ResourceManager.GetString("StringMboxDriveAuthFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive not ready or directory does not exist: {0}.
        /// </summary>
        internal static string StringMboxDriveInvalid {
            get {
                return ResourceManager.GetString("StringMboxDriveInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please confirm that you want to reset the Photomatix commandline options to the default values..
        /// </summary>
        internal static string StringMboxPhotomatixOptionsResetText {
            get {
                return ResourceManager.GetString("StringMboxPhotomatixOptionsResetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm reset.
        /// </summary>
        internal static string StringMboxPhotomatixOptionsResetTitle {
            get {
                return ResourceManager.GetString("StringMboxPhotomatixOptionsResetTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The importer has found a different RAW format in the source folder than the stored one.{2}Stored format: {1}{2}Source folder format: {0}{2}Do you want to update the stored RAW format to &apos;{0}&apos; ?{2}{2}TAKE CARE: If you do not update the stored RAW format,{2} the RAW files in the source folder will be ignored on the current import. .
        /// </summary>
        internal static string StringMboxRawFormatMismatchText {
            get {
                return ResourceManager.GetString("StringMboxRawFormatMismatchText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RAW formats mismatch.
        /// </summary>
        internal static string StringMboxRawFormatMismatchTitle {
            get {
                return ResourceManager.GetString("StringMboxRawFormatMismatchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled Exception: {0}.
        /// </summary>
        internal static string StringMboxUnhandledException {
            get {
                return ResourceManager.GetString("StringMboxUnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to My Computer.
        /// </summary>
        internal static string StringTreeRootnode {
            get {
                return ResourceManager.GetString("StringTreeRootnode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide the logwindow.
        /// </summary>
        internal static string tsbToggleLogVisibilityHide {
            get {
                return ResourceManager.GetString("tsbToggleLogVisibilityHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the logwindow.
        /// </summary>
        internal static string tsbToggleLogVisibilityShow {
            get {
                return ResourceManager.GetString("tsbToggleLogVisibilityShow", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap wand {
            get {
                object obj = ResourceManager.GetObject("wand", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap wrench {
            get {
                object obj = ResourceManager.GetObject("wrench", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
